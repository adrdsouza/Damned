import{_ as A}from"./C1FmrZbK.js";import{w as T}from"./CsLHPPUA.js";import{c as M}from"./DMI_bSna.js";import{K as h}from"./CtARYoZa.js";import{t as N}from"./DcmIUciy.js";import"./CJBvT94Z.js";let S;try{S=M()}catch(t){console.error("Error initializing Medusa client:",t)}function b(){if(!S)try{S=M()}catch(t){throw console.error("Failed to create Medusa client on demand:",t),new Error("Unable to connect to backend service")}return S}function v(){return typeof localStorage<"u"&&localStorage.getItem("medusa_offline_mode")==="true"}function O(){typeof localStorage<"u"&&(localStorage.setItem("medusa_offline_mode","true"),localStorage.setItem("medusa_offline_mode_timestamp",Date.now().toString()),setTimeout(()=>{localStorage.removeItem("medusa_offline_mode"),localStorage.removeItem("medusa_offline_mode_timestamp")},5*60*1e3))}async function C(){try{v()||await b().auth.deleteSession()}catch(t){console.error("Logout error:",t)}c.set(null),g.set(!1)}async function $(){if(v()){const l=h(c);return l?(console.log("Using cached user data in offline mode"),l):null}const t=3;let r=0;const d=!h(g);async function a(){var l,o,u,i,e,n,p,f,_,y;try{const s=b(),w=new AbortController,k=setTimeout(()=>w.abort(),15e3),{customer:m}=await s.customers.retrieve();return clearTimeout(k),m&&(c.update(E=>E?{...E,id:m.id,email:m.email,firstName:m.first_name||"",lastName:m.last_name||""}:{id:m.id,email:m.email,firstName:m.first_name||"",lastName:m.last_name||"",orders:[]}),g.set(!0)),m}catch(s){const w=((l=s.message)==null?void 0:l.includes("Network Error"))||((o=s.message)==null?void 0:o.includes("Network connection error"))||s.name==="TypeError"||s.name==="AbortError"||((u=s.message)==null?void 0:u.includes("Failed to fetch"))||((i=s.message)==null?void 0:i.includes("Request timeout"))||s.toString().includes("Failed to fetch")||((e=s.message)==null?void 0:e.includes("Network request failed"))||((n=s.message)==null?void 0:n.includes("network timeout"))||((p=s.message)==null?void 0:p.includes("Medusa client error"))||((f=s.message)==null?void 0:f.includes("Unable to connect to backend service"))||s.code==="ECONNREFUSED"||s.code==="ECONNRESET"||s.code==="ETIMEDOUT"||!s.response;if(w&&r<t){r++,console.log(`Network error detected, retrying (${r}/${t})...`);const m=Math.min(1e3*Math.pow(2,r),8e3);return await new Promise(E=>setTimeout(E,m)),a()}w?(console.error("Network error getting customer info:",{message:s.message,name:s.name,code:s.code,retries:r,stack:(_=s.stack)==null?void 0:_.split(`
`)[0]}),r>=t&&O()):console.error("Error getting customer info:",s),w&&!d&&r>=t&&(console.log("Network connection issue detected during user-initiated action"),N.error("Network connection issue. Please check your internet connection and try again.")),((y=s.response)==null?void 0:y.status)===401&&(c.set(null),g.set(!1));const k=h(c);return k&&w?(console.log("Using cached user data due to network error"),k):null}}return a()}async function P(){if(v()){const a=h(c);return a!=null&&a.orders&&a.orders.length>0?(console.log("Using cached orders in offline mode"),a.orders):[]}const t=3;let r=0;async function d(){var a,l;try{const o=b(),{orders:u}=await o.customers.listOrders(),i=u.map(e=>({id:e.id,date:e.created_at,status:e.status,total:e.total/100,items:e.items.map(n=>({productId:n.variant.product_id,name:n.title,price:n.unit_price/100,quantity:n.quantity,image:n.thumbnail||"/images/products/placeholder.jpg"})),shipped:e.fulfillment_status==="shipped"||e.fulfillment_status==="fulfilled",fulfillmentStatus:e.fulfillment_status,paymentStatus:e.payment_status}));return c.update(e=>e&&{...e,orders:i}),i}catch(o){const u=((a=o.message)==null?void 0:a.includes("Network Error"))||((l=o.message)==null?void 0:l.includes("Unable to connect to backend service"))||o.name==="TypeError"||o.name==="AbortError"||o.toString().includes("Failed to fetch")||!o.response;if(u&&r<t){r++,console.log(`Network error fetching orders, retrying (${r}/${t})...`);const e=Math.min(1e3*Math.pow(2,r),1e4);return await new Promise(n=>setTimeout(n,e)),d()}console.error("Error getting customer orders:",o),u&&r>=t&&O();const i=h(c);return i!=null&&i.orders&&i.orders.length>0?(console.log("Using cached orders due to network error"),i.orders):[]}}return d()}async function U(t){var l;if(v()){const o=h(c),u=(l=o==null?void 0:o.orders)==null?void 0:l.find(i=>i.id===t);return u?(console.log("Using cached order in offline mode"),u):(N.error("Cannot retrieve order details while offline"),null)}const r=3;let d=0;async function a(){var o,u,i;try{const e=b(),{order:n}=await e.orders.retrieve(t);return n?{id:n.id,date:n.created_at,status:n.status,total:n.total/100,items:n.items.map(f=>({productId:f.variant.product_id,name:f.title,price:f.unit_price/100,quantity:f.quantity,image:f.thumbnail||"/images/products/placeholder.jpg"})),shipped:n.fulfillment_status==="shipped"||n.fulfillment_status==="fulfilled",fulfillmentStatus:n.fulfillment_status,paymentStatus:n.payment_status}:null}catch(e){const n=((o=e.message)==null?void 0:o.includes("Network Error"))||((u=e.message)==null?void 0:u.includes("Unable to connect to backend service"))||e.name==="TypeError"||e.name==="AbortError"||e.toString().includes("Failed to fetch")||!e.response;if(n&&d<r){d++,console.log(`Network error fetching order, retrying (${d}/${r})...`);const _=Math.min(1e3*Math.pow(2,d),1e4);return await new Promise(y=>setTimeout(y,_)),a()}console.error(`Error retrieving order ${t}:`,e),n&&d>=r&&O();const p=h(c),f=(i=p==null?void 0:p.orders)==null?void 0:i.find(_=>_.id===t);return f?(console.log("Using cached order due to network error"),f):n?(N.error("Network connection issue. Using cached data if available."),null):(N.error("Failed to retrieve order. Please try again later."),null)}}return a()}const j=Object.freeze(Object.defineProperty({__proto__:null,getCustomerInfo:$,getCustomerOrders:P,getOrderById:U,logout:C},Symbol.toStringTag,{value:"Module"})),c=T(null),g=T(!1),I={id:1,email:"user@example.com",firstName:"John",lastName:"Doe",orders:[{id:1001,date:"2023-11-15",status:"delivered",total:249.98,items:[{productId:1,name:"Djinn XL Titanium",price:249.99,quantity:1,image:"/images/products/djinn-xl.jpg"}]},{id:1002,date:"2023-12-05",status:"shipped",total:129.99,items:[{productId:2,name:"Oni Compact",price:129.99,quantity:1,image:"/images/products/oni-compact.jpg"}]}]};async function z(t,r){if(t==="user@example.com"&&r==="password")return c.set(I),g.set(!0),localStorage.setItem("isAuthenticated","true"),!0;if(isOfflineMode())return toast.error("Cannot log in while offline. Please try again later."),!1;async function d(){try{const l=await getClient().auth.authenticate({email:t,password:r}),{customer:o}=l||{};return o?(c.set({id:o.id,email:o.email,firstName:o.first_name,lastName:o.last_name,orders:[]}),g.set(!0),localStorage.setItem("isAuthenticated","true"),!0):!1}catch(a){return console.error("Login error:",a),!1}}return await d()}function B(){C().catch(t=>{console.error("Medusa logout error:",t)}),c.set(null),g.set(!1),localStorage.removeItem("isAuthenticated")}function q(){localStorage.getItem("isAuthenticated")==="true"&&A(async()=>{const{getCustomerInfo:r}=await Promise.resolve().then(()=>j);return{getCustomerInfo:r}},void 0,import.meta.url).then(({getCustomerInfo:r})=>{r().catch(()=>{c.set(I),g.set(!0)})}).catch(r=>{console.error("Failed to import customer service:",r),c.set(I),g.set(!0)})}q();export{B as a,P as b,j as c,U as g,g as i,z as l,c as u};
